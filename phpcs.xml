<?xml version="1.0"?>
<ruleset name="Veles" xmlns="http://exslt.org/sets">
	<description>PHP CodeSniffer standard for Veles framework</description>

	<!--
		Include all PSR2 rules with some exceptions
	-->
	<rule ref="PSR2">
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<exclude name="Squiz.WhiteSpace.SuperfluousWhitespace"/>
		<exclude name="PSR2.Methods.FunctionCallSignature"/>
	</rule>

	<!--
		There MUST NOT be trailing whitespace at the end of non-blank lines.
	-->
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
		<properties>
			<property name="ignoreBlankLines" value="false"/>
		</properties>
	</rule>

	<!--
		Checks that no whitespace precedes the first content of the file, exists
		after the last content of the file, resides after content on any line, or
		are two empty lines in functions.
	-->
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile"/>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile"/>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines"/>

	<!-- Check that there is not whitespaces before semicolon -->
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing.Incorrect"/>

	<!-- Ensures long conditions have a comment at the end. -->
	<rule ref="Squiz.Commenting.LongConditionClosingComment">
		<properties>
			<property name="lineLimit" value="40"/>
		</properties>
	</rule>

	<!--
		Code MUST use tabs as indent, and MUST NOT use spaces for indenting.
	-->
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="ignoreIndentationTokens" type="array"
					  value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG"/>
		</properties>
	</rule>

	<!-- Throws errors if spaces are used for indentation other than precision indentation. -->
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>

	<!-- Warn about all founded TODOs. -->
	<rule ref="Generic.Commenting.Todo.CommentFound">
		<message>Please, review this TODO comment: %s</message>
		<severity>3</severity>
	</rule>

	<!-- There MUST NOT be unnecessary string contacts. -->
	<rule ref="Generic.Strings.UnnecessaryStringConcat">
		<properties>
			<property name="allowMultiline" value="true"/>
		</properties>
	</rule>

	<!-- Align doc-comments -->
	<rule ref="Squiz.Commenting.DocCommentAlignment"/>
	<!-- Checks for empty Catch clause. Catch clause must at least have comment -->
	<rule ref="Squiz.Commenting.EmptyCatchComment"/>
	<!-- Ensures long conditions have a comment at the end. -->
	<rule ref="Squiz.Commenting.LongConditionClosingComment"/>
	<!-- Ensures function calls are formatted correctly. -->
	<rule ref="PEAR.Functions.FunctionCallSignature"/>
</ruleset>
